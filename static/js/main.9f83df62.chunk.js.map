{"version":3,"sources":["components/Statistics/Statistics.styles.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.styles.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/App/App.styles.js","components/App/App.js","index.js"],"names":["Paragraph","styled","p","Statistics","props","good","neutral","bad","total","positivePercentage","Object","keys","Btn","button","FeedbackOptions","options","onLeaveFeedback","type","name","onClick","Section","title","children","Paragrapgh","Notification","message","Wrapper","article","App","useState","setGood","setNeutral","setBad","positiveFeedback","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEaA,EAAYC,IAAOC,EAAV,mH,OC+BPC,EA7BI,SAACC,GAClB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,qCACE,eAACT,EAAD,WACGU,OAAOC,KAAKP,GAAO,GADtB,KAC4BC,KAE5B,eAACL,EAAD,WACGU,OAAOC,KAAKP,GAAO,GADtB,KAC4BE,KAE5B,eAACN,EAAD,WACGU,OAAOC,KAAKP,GAAO,GADtB,KAC4BG,KAE5B,eAACP,EAAD,qBAAmBQ,KACnB,eAACR,EAAD,iCACsBS,EAAkB,UAAMA,EAAN,KAA8B,SCjB/DG,EAAMX,IAAOY,OAAV,4FCeDC,EAbS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAACJ,EAAD,CAAKK,KAAK,SAASC,KAAMH,EAASI,QAASH,EAA3C,SACGD,KCSQK,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCLMC,EAAatB,IAAOC,EAAV,oGCURsB,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACF,EAAD,UAAaE,KCHTC,EAAUzB,IAAO0B,QAAV,8CC8CLC,MAzCf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAEMxB,EAAQH,EAAOC,EAAUC,EACzB0B,EAAmBC,KAAKC,MAAO9B,EAAOG,EAAS,KACrD,OACE,eAACkB,EAAD,WACE,eAAC,EAAD,CAASL,MAAM,wBAAf,UACE,cAAC,EAAD,CACEN,QAAS,OACTC,gBAAiB,WACfc,EAAQzB,EAAO,MAGnB,cAAC,EAAD,CACEU,QAAS,UACTC,gBAAiB,kBAAMe,EAAWzB,EAAU,MAE9C,cAAC,EAAD,CACES,QAAS,MACTC,gBAAiB,kBAAMgB,EAAOzB,EAAM,SAGxC,cAAC,EAAD,CAASc,MAAM,aAAf,SACGb,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBwB,IAEpB,OAELzB,EAAQ,KAAO,cAAC,EAAD,CAAciB,QAAQ,0BCvC5CW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f83df62.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Paragraph = styled.p`\n  font-size: 18px;\n  padding: 0;\n  margin: 0 0 10px;\n  text-transform: capitalize;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paragraph } from \"./Statistics.styles\";\n\nconst Statistics = (props) => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <>\n      <Paragraph>\n        {Object.keys(props)[0]}: {good}\n      </Paragraph>\n      <Paragraph>\n        {Object.keys(props)[1]}: {neutral}\n      </Paragraph>\n      <Paragraph>\n        {Object.keys(props)[2]}: {bad}\n      </Paragraph>\n      <Paragraph>Total: {total}</Paragraph>\n      <Paragraph>\n        Positive feedback: {positivePercentage ? `${positivePercentage}%` : 0}\n      </Paragraph>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import styled from \"@emotion/styled\";\n\nexport const Btn = styled.button`\n  padding: 10px;\n  margin-right: 20px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Btn } from \"./FeedbackOptions.styles\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <Btn type=\"button\" name={options} onClick={onLeaveFeedback}>\n      {options}\n    </Btn>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const Paragrapgh = styled.p`\n  font-size: 18px;\n  padding: 0;\n  margin: 0;\n  font-style: italic;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paragrapgh } from \"./Notification.styles\";\n\nconst Notification = ({ message }) => {\n  return <Paragrapgh>{message}</Paragrapgh>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.article`\n  padding: 20px;\n`;\n","import React, { useState } from \"react\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions\";\nimport Section from \"../Section\";\nimport Notification from \"../Notification\";\nimport { Wrapper } from \"./App.styles\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = good + neutral + bad;\n  const positiveFeedback = Math.floor((good / total) * 100);\n  return (\n    <Wrapper>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={\"good\"}\n          onLeaveFeedback={() => {\n            setGood(good + 1);\n          }}\n        />\n        <FeedbackOptions\n          options={\"neutral\"}\n          onLeaveFeedback={() => setNeutral(neutral + 1)}\n        />\n        <FeedbackOptions\n          options={\"bad\"}\n          onLeaveFeedback={() => setBad(bad + 1)}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positiveFeedback}\n          />\n        ) : null}\n      </Section>\n      {total ? null : <Notification message=\"No feedback given\" />}\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}